apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlinx-serialization'
apply plugin: 'maven-publish'
apply plugin: 'maven'

android {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())

    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0.5"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        kotlinOptions.freeCompilerArgs += ['-module-name', "com.kodabots.kodabots-core"]
    }

    signingConfigs {
        release {
            keyAlias 'kodabots'
            keyPassword properties.getProperty("keystorePassword")
            storeFile file(properties.getProperty("keystorePath"))
            storePassword properties.getProperty("keystorePassword")
        }
    }


    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            debuggable false
            matchingFallbacks = 'debug'
            buildConfigField "String", "BASE_URL", "\"https://web.kodabots.com/mobile\""
            buildConfigField "String", "REST_BASE_URL", "\"https://chatbot-mxwaxhdter.kodabots.com\""
            buildConfigField "String", "API_VERSION", "\"v1\""
            buildConfigField "String", "REST_API_VERSION", "\"v1\""
        }
        debug {
            minifyEnabled true
            debuggable true
            signingConfig signingConfigs.debug
            proguardFiles 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://widget.app2.kodabots.com\""
            buildConfigField "String", "REST_BASE_URL", "\"https://chatbot-bnwtfr6jae-stage.kodabots.com\""
            buildConfigField "String", "API_VERSION", "\"v1\""
            buildConfigField "String", "REST_API_VERSION", "\"v1\""
        }
        stage {
            minifyEnabled true
            debuggable true
            signingConfig signingConfigs.debug
            matchingFallbacks = 'debug'
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "BASE_URL", "\"https://widget.app2.kodabots.com\""
            buildConfigField "String", "REST_BASE_URL", "\"https://chatbot-bnwtfr6jae-stage.kodabots.com\""
            buildConfigField "String", "API_VERSION", "\"v1\""
            buildConfigField "String", "REST_API_VERSION", "\"v1\""
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    api "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    api 'androidx.core:core-ktx:1.3.2'
    api 'androidx.appcompat:appcompat:1.2.0'
    api 'com.google.android.material:material:1.3.0'
    api 'androidx.cardview:cardview:1.0.0'
    api 'androidx.constraintlayout:constraintlayout:2.0.4'

    api('org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.9') {
        transitive = true
    }
    api('org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.9') {
        transitive = true
    }

    api('pub.devrel:easypermissions:3.0.0') {
        transitive = true
    }
    api('com.sagar:coroutinespermission:2.0.0') {
        transitive = true
    }

    api('androidx.security:security-crypto:1.1.0-alpha03') {
        transitive = true
    }
    api('com.airbnb.android:lottie:3.4.4') {
        transitive = true
    }

    api('io.ktor:ktor-client-android:1.4.0') {
        transitive = true
    }
    api('io.ktor:ktor-client-serialization-jvm:1.4.0') {
        transitive = true
    }
    api('io.ktor:ktor-client-logging:1.4.0') {
        transitive = true
    }

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

}
repositories
afterEvaluate {
    publishing {

        repositories {
            maven {
                Properties properties = new Properties()
                properties.load(project.rootProject.file("local.properties").newDataInputStream())
                url  properties.getProperty("publishUrl")
                credentials {
                    username = properties.getProperty("publishUsername")
                    password =  properties.getProperty("publishPassword")
                }
            }
        }
        publications {
            release(MavenPublication) {
                from components.release
                groupId = 'com.kodabots.sdk'
                artifactId = 'kodabots-core'
                version = '1.0.5'
            }
        }
    }
}